window.SIDEBAR_ITEMS = {"fn":[["play_queued_audio_system","Plays audio currently queued in the [`Audio`] resource through the [`AudioOutput`] resource"]],"mod":[["prelude",""]],"struct":[["Audio","Use this [`Resource`] to play audio."],["AudioLoader","Loads files as [`AudioSource`] `Assets`"],["AudioOutput","Used internally to play audio on the current “audio device”"],["AudioPlugin","Adds support for audio playback to a Bevy Application"],["AudioSink","Asset controlling the playback of a sound"],["AudioSource","A source of audio data"],["PlaybackSettings","Settings to control playback from the start."]],"trait":[["AddAudioSource","A trait that allows adding a custom audio source to the object. This is implemented for [`App`][bevy_app::App] to allow registering custom [`Decodable`] types."],["CpalSample","Trait for containers that contain PCM data."],["Decodable","A type implementing this trait can be converted to a [`rodio::Source`] type. It must be [`Send`] and [`Sync`], and usually implements [`Asset`] so needs to be [`TypeUuid`], in order to be registered. Types that implement this trait usually contain raw sound data that can be converted into an iterator of samples. This trait is implemented for [`AudioSource`]. Check the example `audio/decodable` for how to implement this trait on a custom type."],["Sample","Represents a value of a single sample."],["Source","A source of samples."]]};