window.SIDEBAR_ITEMS = {"derive":[["Resource",""],["SystemParam","Implement `SystemParam` to use a struct as a parameter in a system"]],"enum":[["QueryComponentError","An error that occurs when retrieving a specific [`Entity`]â€™s component from a [`Query`]"]],"fn":[["assert_is_read_only_system","Ensure that a given function is a read-only system."],["assert_is_system","Ensure that a given function is a system."]],"mod":[["lifetimeless",""]],"struct":[["AlreadyWasSystem",""],["CommandQueue","Densely and efficiently stores a queue of heterogenous types implementing [`Command`]."],["Commands","A [`Command`] queue to perform impactful changes to the [`World`]."],["Deferred","A [`SystemParam`] that stores a buffer which gets applied to the [`World`] at the end of a stage. This is used internally by `Commands` to defer `World` mutations."],["Despawn",""],["EntityCommands","A list of commands that will be run to modify an entity."],["ExclusiveFunctionSystem","A function system that runs with exclusive [`World`] access."],["FunctionSystem","The [`System`] counter part of an ordinary function."],["GetOrSpawn",""],["In","Wrapper type to mark a [`SystemParam`] as an input."],["InitResource",""],["Insert",""],["InsertOrSpawnBatch",""],["InsertResource",""],["IsExclusiveFunctionSystem",""],["IsFunctionSystem",""],["Local","A system local [`SystemParam`]."],["LogComponents","[`Command`] to log the components of a given entity. See [`EntityCommands::log_components`]."],["NonSend","Shared borrow of a non-[`Send`] resource."],["NonSendMut","Unique borrow of a non-[`Send`] resource."],["ParallelCommands","An alternative to [`Commands`] that can be used in parallel contexts, such as those in `Query::par_iter`"],["ParamSet","A collection of potentially conflicting [`SystemParam`]s allowed by disjoint access."],["PipeSystem","A [`System`] created by piping the output of the first system into the input of the second."],["Query","System parameter that provides selective access to the [`Component`] data stored in a [`World`]."],["Remove",""],["RemoveResource",""],["Res","Shared borrow of a [`Resource`]."],["ResMut","Unique mutable borrow of a [`Resource`]."],["Spawn",""],["SpawnBatch",""],["StaticSystemParam","A helper for using system parameters in generic contexts"],["SystemChangeTick","A [`SystemParam`] that reads the previous and current change ticks of the system."],["SystemMeta","The metadata of a [`System`]."],["SystemName","Name of the system that corresponds to this [`crate::system::SystemState`]."],["SystemState","Holds on to persistent state required to drive [`SystemParam`] for a [`System`]."],["WithEntity","Turns an [`EntityCommand`] type into a [`Command`] type."]],"trait":[["Command","A [`World`] mutation."],["EntityCommand","A [`Command`] which gets executed for a given [`Entity`]."],["ExclusiveSystemParam",""],["ExclusiveSystemParamFunction","A trait implemented for all exclusive system functions that can be used as [`System`]s."],["IntoPipeSystem","An extension trait providing the [`IntoPipeSystem::pipe`] method to pass input from one system into the next."],["IntoSystem","Conversion trait to turn something into a [`System`]."],["ReadOnlySystem","[`System`] types that do not modify the [`World`] when run. This is implemented for any systems whose parameters all implement `ReadOnlySystemParam`."],["ReadOnlySystemParam","A [`SystemParam`] that only reads a given [`World`]."],["Resource","A type that can be inserted into a [`World`] as a singleton."],["System","An ECS system that can be added to a `Schedule`"],["SystemBuffer","Types that can be used with [`Deferred<T>`] in systems. This allows storing system-local data which is used to defer [`World`] mutations."],["SystemParam","A parameter that can be used in a `System`."],["SystemParamFunction","A trait implemented for all functions that can be used as [`System`]s."]],"type":[["BoxedSystem","A convenience type alias for a boxed [`System`] trait object."],["ExclusiveSystemParamItem",""],["SystemParamItem","Shorthand way of accessing the associated type [`SystemParam::Item`] for a given [`SystemParam`]."]]};