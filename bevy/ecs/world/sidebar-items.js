window.SIDEBAR_ITEMS = {"constant":[["CHECK_TICK_THRESHOLD","The (arbitrarily chosen) minimum number of world tick increments between `check_tick` scans."]],"mod":[["unsafe_world_cell",""]],"struct":[["EntityMut","A mutable reference to a particular [`Entity`] and all of its components"],["EntityRef","A read-only reference to a particular [`Entity`] and all of its components"],["Mut","Unique mutable borrow of an entity’s component"],["Ref","Shared borrow of an entity’s component with access to change detection. Similar to [`Mut`] but is immutable and so doesn’t require unique access."],["SpawnBatchIter",""],["World","Stores and exposes operations on entities, components, resources, and their associated metadata."],["WorldBorrow",""],["WorldBorrowMut",""],["WorldCell","Exposes safe mutable access to multiple resources at a time in a World. Attempting to access World in a way that violates Rust’s mutability rules will panic thanks to runtime checks."],["WorldId","A unique identifier for a [`super::World`]."]],"trait":[["FromWorld","Creates an instance of the type this trait is implemented for using data from the supplied [World]."]]};