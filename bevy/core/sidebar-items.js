window.SIDEBAR_ITEMS = {"derive":[["Pod","Derive the `Pod` trait for a struct"],["Zeroable","Derive the `Zeroable` trait for a struct"]],"fn":[["bytes_of","Re-interprets `&T` as `&[u8]`."],["cast_slice","Cast `&[A]` into `&[B]`."]],"mod":[["prelude","The Bevy Core Prelude."]],"struct":[["DebugName","Convenient query for giving a human friendly name to an entity."],["DebugNameItem","Automatically generated [`WorldQuery`] item type for [`DebugName`], returned when iterating over query results."],["FrameCount","Maintains a count of frames rendered since the start of the application."],["FrameCountPlugin","Adds frame counting functionality to Apps."],["Name","Component used to identify an entity. Stores a hash for faster comparisons."],["NonSendMarker","A dummy type that is `!Send`, to force systems to run on the main thread."],["TaskPoolOptions","Helper for configuring and creating the default task pools. For end-users who want full control, set up `TaskPoolPlugin`"],["TaskPoolPlugin","Setup of default task pools: `AsyncComputeTaskPool`, `ComputeTaskPool`, `IoTaskPool`."],["TaskPoolThreadAssignmentPolicy","Defines a simple way to determine how many threads to use given the number of remaining cores and number of total cores"],["TypeRegistrationPlugin","Registration of default types to the `TypeRegistry` reesource."]],"trait":[["Pod","Marker trait for “plain old data”."],["Zeroable","Trait for types that can be safely created with `zeroed`."]]};